using NUnit.Framework;
using System.IO;
using System.Xml.Linq;

[TestFixture]
public class TextFileGeneratorTests
{
    private const string ConfigFilePath = "FormattingRules.xml";
    private const string OutputFilePath = "output.txt";

    [SetUp]
    public void SetUp()
    {
        if (File.Exists(OutputFilePath))
        {
            File.Delete(OutputFilePath);
        }
    }

    [Test]
    public void GenerateTextFile_CreatesFileWithCorrectContent()
    {
        // Act
        TextFileGenerator.GenerateTextFile(ConfigFilePath, ".");

        // Assert
        Assert.IsTrue(File.Exists(OutputFilePath), "Output file was not created.");

        var lines = File.ReadAllLines(OutputFilePath);
        Assert.AreEqual(11, lines.Length, "The output file should contain 11 lines (5 headers + 5 information + 1 last line).");

        for (int i = 0; i < 10; i += 2)
        {
            Assert.IsTrue(lines[i].StartsWith("HeaderName"), $"Line {i + 1} should be a header line.");
            Assert.IsTrue(lines[i + 1].StartsWith("InfoName"), $"Line {i + 2} should be an information line.");
        }

        // Validate the last line format
        string lastLine = lines[10];
        Assert.AreEqual(22, lastLine.Length, "The last line should have the correct length based on the DateFichier and Nombre_enregistrements.");
        Assert.IsTrue(lastLine.StartsWith("2024"), "The last line should start with the current year.");
    }

    [Test]
    public void ValidateConfigFile_ThrowsException_WhenFormattingRulesIsMissing()
    {
        var invalidXml = new XDocument(new XElement("InvalidRoot"));
        Assert.Throws<InvalidOperationException>(() => Program.ValidateConfigFile(invalidXml),
            "The root element 'FormattingRules' is missing in the configuration file.");
    }

    [Test]
    public void ValidateConfigFile_ThrowsException_WhenRequiredSectionsAreMissing()
    {
        var invalidXml = new XDocument(new XElement("FormattingRules"));
        Assert.Throws<InvalidOperationException>(() => Program.ValidateConfigFile(invalidXml),
            "The required section 'FileName' is missing in the configuration file.");
    }
}
